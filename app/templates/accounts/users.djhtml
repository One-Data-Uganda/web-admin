{% set title = "Dashboard" %}
{% extends "layout.djhtml" %}

{% block additionalstyles %}
    <link href="{{url_for('static', filename='assets/plugins/custom/datatables/datatables.bundle.css') }}" rel="stylesheet" type="text/css" />
{% endblock %}
{% block content %}
    <div class="row">
        <div class="col-xl-12">
            <!--begin::Card-->
            <div class="card shadow-sm card-custom gutter-b card-stretch" id="userCard">
                <div class="card-header">
                    <div class="card-title fw-bold">
                        <h3 class="card-label">Manage Users for {{ account.kyc.business_name }}</h3>
                    </div>
                    <div class="card-toolbar">
                        <a href="{{ url_for('accounts.business') }}" class="btn btn-sm btn-danger me-2">
                            <i class="fa fa-undo"></i>
                            Return
                        </a>
                        <a href="#" data-url="{{ url_for('.userChange', account_id=account.id) }}" data-size="modal-lg" type="button" class="btn btn-sm btn-primary ajax-modal" data-toggle="modal">
                            <i class="fas fa-plus-circle"></i> Add New User
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    <table id="userTable" class="table table-darker table-bordered table-striped table-row-bordered gy-2 gs-2" >
                    </table>
                </div>
            </div>
            <!--end::Card-->
        </div>
    </div>
{% endblock %}

{% block additionalscripts %}
    <script src="{{ url_for('static', filename='assets/plugins/custom/datatables/datatables.bundle.js') }}"></script>
    <script src="{{ url_for('static', filename='js/datatables-export.js', v=1) }}" type="text/javascript"></script>
    <script src="{{ url_for('static', filename='plugins/bootbox/bootbox.min.js') }}" type="text/javascript"></script>
    <script>
     "use strict";
     var disableUser = function(id) {
         $.post("{{ url_for('.userChangeState', state='disable')}}", "id="+id, function(r){
             if (r.success) {
                 UserTable.reload();
             }
         })
     }

     var enableUser = function(id) {
         $.post("{{ url_for('.userChangeState', state='enable')}}", "id="+id, function(r){
             if (r.success) {
                 UserTable.reload();
             }
         })
     }

     var UserTable = function() {
         $.fn.dataTable.Api.register('column().title()', function() {
             return $(this.header()).text().trim();
         });
         var table;

         var reloadTable = function() {
             table.ajax.reload();
         }

         var initTable = function() {
             table = $("#userTable").DataTable({
                 "responsive": true,
                 "searchDelay": 700,
                 "serverSide": true,
                 "processing": true,

                 "order": [
                     [0, 'asc']
                 ],

                 //set the initial value
                 "ajax": {
                     "url": "{{ url_for('accounts.usersJSON', account_id=account.id) }}", // ajax source
                     "type": "POST",
                 },
                 "columns": [
                     { "data": "name", "title": "Name" },
                     { "data": "msisdns", "title": "Mobile Number" },
                     { "data": "emails", "title": "Email" },
                     { "data": "account_group", "title": "User Group" },
                     { "data": "active", "title": "Status",
                       render: function(v) {
                           if (v) {
                               return '<span class="badge badge-sm badge-inline badge-success">Active</span>';
                           } else {
                               return '<span class="badge badge-sm badge-inline badge-danger">Inactive</span>';

                           }
                       }
                     },
                     { "data": "id", "title": "Actions",
                         orderable: false,
                         render: function(data, type, row) {
                             var x = `
                            <div class="dropdown dropdown-inline">
                                <button class="btn btn-sm btn-secondary dropdown-toggle" data-bs-toggle="dropdown">
                                    Actions
                                </button>
                                    <ul class="dropdown-menu">
                                        <li>
                                            <a href="#" data-size="modal-lg" data-url="{{ url_for('.userChange', account_id=account.id)}}?id=`+ data +`" class="dropdown-item ajax-modal" data-toggle="modal">
                                                <span class="navi-icon"><i class="la la-pencil-alt"></i></span>
                                                <span class="navi-text">Edit</span>
                                            </a>
                                        </li>`;
                             if (row.active) {
                                 x += `
                                        <li>
                                            <a href="javascript:disableUser('`+data+`');" class="dropdown-item disable-user">
                                                <span class="navi-icon"><i class="la la-times-circle"></i></span>
                                                <span class="navi-text">De-Activate</span>
                                            </a>
                                        </li>`;
                             } else {
                                 x += `
                                        <li>
                                            <a href="javascript:enableUser('`+data+`');" class="dropdown-item enable-user">
                                                <span class="navi-icon"><i class="la la-check-circle-o"></i></span>
                                                <span class="navi-text">Activate</span>
                                            </a>
                                        </li>`;
                             }
                             x += `
                                    </ul>
                            </div>`;
                             return x;
                         }
                     }
                 ],
                 dom: datatablesDom,
                 language: datatablesLanguage,
                 initComplete: function() {
                     var thisTable = this;
                     var rowFilter = $('<tr class="filter align-top"></tr>').appendTo($(table.table().header()));

                     this.api().columns().every(function() {
                         var column = this;
                         var input;

                         switch (column.title()) {
                             case 'Name':
                             case 'Mobile Number':
                             case 'Username':
                             case 'Email':
                                 input = $(`<input type="text" class="form-control form-control-sm form-filter datatable-input" data-col-index="` + column.index() + `"/>`);
                                 break;

                             case 'User Group':
                                 input = $(`<select class="form-select form-select-sm form-filter datatable-input" title="Select" data-col-index="` + column.index() + `">
                                 <option value="">ALL</option>
                                 {% for group in account.groups %}
                                 <option value="{{ group.id }}">{{ group.name }}</option>
                                 {% endfor %}`);

                                 break;
                             case 'KYC':
                                 input = $(`<select class="form-select form-select-sm form-filter datatable-input" title="Select" data-col-index="` + column.index() + `">
                                     <option value="">Select</option></select>`);
                                 column.data().unique().sort().each(function(d, j) {
                                     $(input).append('<option value="' + d + '">' + d + '</option>');
                                 });
                                 break;

                             case 'Actions':
                                 var search = $(`
                                     <button class="btn btn-sm btn-primary kt-btn btn-sm kt-btn--icon me-2">
                                     <span>
                                     <i class="la la-search"></i>
                                     <span>Search</span>
                                     </span>
                                     </button>`);

                                 var reset = $(`
                                     <button id="user-reset" class="btn btn-sm btn-danger kt-btn btn-sm kt-btn--icon">
                                     <span>
                                     <i class="la la-close"></i>
                                     <span>Reset</span>
                                     </span>
                                     </button>`);

                                 $('<th nowrap>').append(search).append(reset).appendTo(rowFilter);

                                 $(".datatable-input" ).on( "keydown", function(event) {
                                     if(event.which == 13) {
                                         $(search).click();
                                     }
                                 });

                                 $(search).on('click', function(e) {
                                     e.preventDefault();
                                     var params = {};
                                     $(rowFilter).find('.datatable-input').each(function() {
                                         var i = $(this).data('col-index');
                                         if (params[i]) {
                                             params[i] += '|' + $(this).val();
                                         } else {
                                             params[i] = $(this).val();
                                         }
                                     });
                                     $.each(params, function(i, val) {
                                         // apply search params to datatable
                                         table.column(i).search(val ? val : '', false, false);
                                     });
                                     table.table().draw();
                                 });

                                 $(reset).on('click', function(e) {
                                     e.preventDefault();
                                     $(rowFilter).find('.datatable-input').each(function(i) {
                                         $(this).val('');
                                         table.column($(this).data('col-index')).search('', false, false);
                                     });
                                     table.table().draw();
                                 });
                                 break;
                         }

                         if (column.title() !== 'Actions') {
                             $(input).appendTo($('<th>').appendTo(rowFilter));
                         }
                     });

                     // hide search column for responsive table
                     var hideSearchColumnResponsive = function() {
                         thisTable.api().columns().every(function() {
                             var column = this
                             if (column.responsiveHidden()) {
                                 $(rowFilter).find('th').eq(column.index()).show();
                             } else {
                                 $(rowFilter).find('th').eq(column.index()).hide();
                             }
                         })
                     };

                     // init on datatable load
                     hideSearchColumnResponsive();
                     // recheck on window resize
                     window.onresize = hideSearchColumnResponsive;
                 },

             });
         };

         return {
             //main function to initiate the module
             init: function() {
                 initTable();
             },
             reload: function() {
                 reloadTable();
             },

         };
     }();

     $(document).ready(function(){
         UserTable.init();
     });
    </script>
{% endblock %}

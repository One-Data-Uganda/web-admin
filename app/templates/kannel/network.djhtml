{% set title="SMPP Configuration" %}
{% extends "layout.djhtml" %}

{% block content %}
    <!--begin::Post-->
    <div class="post d-flex flex-column-fluid" id="networkCard">
        <!--begin::Container-->
        <div id="kt_content_container" class="container-fluid">
            <!--begin::Inbox App - Messages -->
            <div class="d-flex flex-column flex-lg-row">
                <!--begin::Sidebar-->
                <div class="flex-column flex-lg-row-auto w-100 w-lg-275px mb-10 mb-lg-0">
                    <!--begin::Sticky aside-->
                    <div class="card shadow-sm card-flush mb-0" data-kt-sticky="true" data-kt-sticky-name="inbox-aside-sticky" data-kt-sticky-offset="{default: false, xl: '0px'}" data-kt-sticky-width="{lg: '275px'}" data-kt-sticky-left="auto" data-kt-sticky-top="150px" data-kt-sticky-animation="false" data-kt-sticky-zindex="95">
                        <!--begin::Aside content-->
                        <div class="card-body">
                            <!--begin::Button-->
                            <button onclick="addHost()" class="btn btn-sm btn-primary  w-100 mb-10">

                                <i class="fas fa-plus-circle"></i> Add Network Group
                            </button>
                            <!--end::Button-->
                            <!--begin::Menu-->
                            <div class="menu menu-column menu-rounded menu-state-bg menu-state-title-primary menu-state-icon-primary menu-state-bullet-primary mb-10">
                                <!--begin::Menu item-->
                                {% for network in networks %}
                                    <div class="menu-item mb-3">
                                        <!--begin::Group-->
                                        <span data-id="{{ network.id}}" class="host menu-link {% if network.id == current_network.id %}active{% endif %}">
                                            <span class="menu-icon">
                                                <!--begin::Svg Icon | path: icons/duotune/communication/com010.svg-->
                                                <span class="svg-icon svg-icon-2 me-3">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                                        <path d="M6 8.725C6 8.125 6.4 7.725 7 7.725H14L18 11.725V12.925L22 9.725L12.6 2.225C12.2 1.925 11.7 1.925 11.4 2.225L2 9.725L6 12.925V8.725Z" fill="black" />
                                                        <path opacity="0.3" d="M22 9.72498V20.725C22 21.325 21.6 21.725 21 21.725H3C2.4 21.725 2 21.325 2 20.725V9.72498L11.4 17.225C11.8 17.525 12.3 17.525 12.6 17.225L22 9.72498ZM15 11.725H18L14 7.72498V10.725C14 11.325 14.4 11.725 15 11.725Z" fill="black" />
                                                    </svg>
                                                </span>
                                                <!--end::Svg Icon-->
                                            </span>
                                            <span class="menu-title fw-bolder">{{ network.name }}</span>
                                            <span class="badge badge-light-success">{{ network.hosts | length }}</span>
                                        </span>
                                        <!--end::Group-->
                                    </div>
                                {% endfor %}
                                <!--end::Menu-->
                            </div>
                            <!--end::Aside content-->
                        </div>
                        <!--end::Sticky aside-->
                    </div>
                </div>
                <!--end::Sidebar-->
                <!--begin::Content-->
                <div class="flex-lg-row-fluid ms-lg-7 ms-xl-10">
                    <!--begin::Head-->
                    <div class="card shadow-sm card-custom gutter-b">
                        <!--begin::Body-->
                        <div class="card-body d-flex align-items-center justify-content-between flex-wrap py-2">
                            <!--begin::Info-->
                            <div class="d-flex align-items-center me-2 py-2">
                                <!--begin::Title-->
                                <h3 class="font-weight-bold mb-0 me-10">{{ current_network.name }}</h3>
                                <!--end::Title-->
                            </div>

                            <div class="d-flex align-items-center me-2 py-2">
                                <!--begin::Navigation-->
                                <a data-url="{{ url_for('kannel.hostEdit', network_id=current_network.id) }}" class="btn btn-sm btn-primary btn-sm ajax-modal me-5" data-size="modal-xl" data-bs-toggle="ajax-modal">
                                    <i class="fa fas fa-plus-circle font-size-sm"></i>
                                    <span id="title">Add New SMPP Host under {{ current_network.name }}</span>
                                </a>
                                <button type="button" class="btn btn-sm btn-info btn-sm" onclick="regenerateKannel()">
                                    <i class="fa fa-undo"></i> Regenerate Kannel Config
                                </button>

                                <!--end::Navigation-->
                            </div>
                            <!--end::Info-->

                        </div>
                        <!--end::Body-->
                    </div>
                    <!--end::Head-->

                    <div class="card shadow-sm card-custom gutter-b" id="hostCard">
                        <!--begin::Body-->
                        <div class="card-body">
                            <table class="table table-darker table-bordered table-striped table-row-bordered gy-2 gs-2">
                                <thead>
                                    <tr>
                                        <th>
                                            Name
                                        </th>
                                        <th>
                                            Host
                                        </th>
                                        <th>
                                            Port
                                        </th>
                                        <th>
                                            Type
                                        </th>
                                        <th>
                                            Username
                                        </th>
                                        <th>
                                            Password
                                        </th>
                                        <th>
                                            Allowed Prefixes
                                        </th>
                                        <th>
                                            Denied Prefixes
                                        </th>
                                        <th>
                                            Status
                                        </th>
                                        <th>
                                            Actions
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for host in current_network.hosts %}
                                        <tr>
                                            <td>
                                                {{ host.name }}
                                            </td>
                                            <td>
                                                {{ host.host }}
                                            </td>
                                            <td>
                                                {{ host.port }}
                                            </td>
                                            <td>
                                                {{ host.system_type }}
                                            </td>
                                            <td>
                                                {{ host.username }}
                                            </td>
                                            <td>
                                                {{ host.password }}
                                            </td>
                                            <td>
                                                {{ host.allowed_prefix }}
                                            </td>
                                            <td>
                                                {{ host.denied_prefix }}
                                            </td>
                                            <td>
                                                {% if host.active %}
                                                    <span class="badge font-weight-bold badge-lg badge-success badge-inline">Active</span>
                                                {% else %}
                                                    <span class="badge font-weight-bold badge-lg badge-danger badge-inline">Inactive</span>
                                                {% endif %}
                                            </td>
                                            <td>
                                                <a data-url="{{ url_for("kannel.hostEdit", network_id=host.network_id, id=host.id)}}" class="btn btn-sm btn-primary btn-icon edit-host ajax-modal" data-size="modal-xl" data-toggle="modal" title="Edit details">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                {% if host.active %}
                                                    <button class="btn btn-sm btn-info btn-icon" onclick="deactivateHost({{ host.id }}, {{ host.network_id}})" title="Deactivate">
                                                        <i class="fas fa-times"></i>
                                                    </button>
                                                {% else %}
                                                    <button class="btn btn-sm btn-success btn-icon activate-host" onclick="activateHost({{ host.id }}, {{ host.network_id}})" title="Activate">
                                                        <i class="fas fa-check"></i>
                                                    </button>
                                                {% endif %}
                                                <button class="btn btn-sm btn-warning btn-icon" onclick="cloneHost({{ host.id }}, {{ host.network_id}})" title="Clone">
                                                    <i class="fas fa-copy"></i>
                                                </button>
                                                <button class="btn btn-sm btn-danger btn-icon" onclick="deleteHost({{ host.id }}, {{ host.network_id}})" title="Delete">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <!--end::Card-->
            </div>
        </div>
    </div>

{% endblock %}

{% block additionalscripts %}</thead>
    <script src="{{ url_for('static', filename='plugins/bootbox/bootbox.min.js') }}" type="text/javascript"></script>
    <script>
     "use strict";
     var target = document.querySelector('#networkCard');

     var blockUI;

     blockUI = KTBlockUI.getInstance(target);

     if (!blockUI) {
         blockUI = new KTBlockUI(target);
     }

     var validation;
     var extraButtons;

     function addHost() {
         bootbox.prompt({
             title: "Please enter the name of the new Host Group",
             inputType: "text",
             required: true,
             callback: function(d){
                 if(d) {
                     blockUI.block();

                     var data = {
                         name: d
                     };

                     $.post("{{ url_for('kannel.smppAdd' )}}", data, function(r) {
                         blockUI.release();
                         if(r.success) {
                             $("#networkCard").load("{{ url_for('kannel.smpp') }} #networkCard", function(){
                                 initFns.init();
                             });
                         } else {
                             swal.fire({
                                 text: r.message,
                                 icon: "error",
                                 buttonsStyling: false,
                                 confirmButtonText: "Ok",
                                 customClass: {
                                     confirmButton: "btn btn-sm font-weight-bold btn-light-primary"
                                 }
                             });

                         }
                     });

                 }
             }
         });
     }

     function regenerateKannel(){
         blockUI.block();

         $.post("{{ url_for('kannel.regenerate') }}", function(r) {
             blockUI.release();
             if (r.success) {
                 swal.fire({
                     text: "Successfully scheduled regeneration",
                     icon: "success",
                     buttonsStyling: false,
                     confirmButtonText: "Ok",
                     customClass: {
                         confirmButton: "btn btn-sm font-weight-bold btn-light-primary"
                     }
                 });
             } else {
                 swal.fire({
                     text: r.message,
                     icon: "error",
                     buttonsStyling: false,
                     confirmButtonText: "Ok",
                     customClass: {
                         confirmButton: "btn btn-sm font-weight-bold btn-light-primary"
                     }
                 });

             }
         });
     }

     function _Host(id, network_id, action, name) {
         blockUI.block();

         var data = {
             id: id,
             action: action,
             name: name
         };
         $.post("{{ url_for('kannel.hostChange') }}", data=data, function(r) {
             blockUI.release();
             if (r.success) {
                 $("#networkCard").load("{{ url_for('kannel.smpp') }}/" + network_id+"  #networkCard", function(){
                     initFns.init();
                 })
             } else {
                 swal.fire({
                     text: r.message,
                     icon: "error",
                     buttonsStyling: false,
                     confirmButtonText: "Ok",
                     customClass: {
                         confirmButton: "btn btn-sm font-weight-bold btn-light-primary"
                     }
                 });

             }
         });
     }

     function activateHost(id, network_id) {
         _Host(id, network_id, "enable");
     }

     function deactivateHost(id, network_id) {
         _Host(id, network_id, "disable");
     }

     function deleteHost(id, network_id) {
         bootbox.confirm("Are you sure you want to delete this Host?", function(result) {
             if (result) {
                 _Host(id, network_id, "delete");
             }
         });
     }

     function cloneHost(id, network_id) {
         bootbox.prompt("Please enter a unique name for the new Host", function(result) {
             if (result) {
                 _Host(id, network_id, "clone", result);
             }
         });
     }

     function resetHost(id, network_id) {
         _Host(id, network_id, "reset");
     }

     var initFns = function() {
         // Public Functions
         return {
             // public functions
             init: function() {
                 $(".host").on('click', function(){
                     var id = $(this).data("id");
                     var url = "{{ url_for('kannel.smpp') }}/"+id;

                     console.log(url);
                     $("#networkCard").load(url+" #networkCard", function() {
                         initFns.init(id);
                     });
                 });
             }
         }
     }();

     jQuery(document).ready(function() {
         initFns.init();
     });


    </script>
{% endblock %}

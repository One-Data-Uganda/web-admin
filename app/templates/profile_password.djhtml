{% extends "layout.djhtml" %}
{% set title = "Profile: Change Password" %}
{% set active_page = "profile" %}
{% set profile_thumb = current_user.image | default_profile_image | thumbnail('100x100') %}

{% block content %}
    <div class="d-flex flex-row">
        <!--begin::Aside-->
        <div class="flex-row-auto offcanvas-mobile w-250px w-xxl-350px" id="kt_profile_aside">
            <!--begin::Profile Card-->
            <div class="card shadow-sm card-custom card-stretch">
                <!--begin::Body-->
                <div class="card-body pt-4">
                    <!--begin::User-->
                    <!--begin: Pic-->
                    <div class="me-7 mb-4">
                        <div class="symbol symbol-100px symbol-lg-160px symbol-fixed position-relative">
                            <img src="{{ profile_thumb }}" alt="image">
                        </div>
                    </div>
                    <!--end::Pic-->
                    <!--begin::Info-->
                    <a href="#" class="text-gray-900 text-hover-primary fs-2 fw-bolder me-1">{{ current_user.name }}</a>
                    <!--begin::Nav-->
                    <div class="menu menu-rounded menu-column menu-title-gray-700 menu-state-title-primary menu-active-bg-light-primary fw-bold">
                        <!--begin::Item-->
                        <div class="menu-item mb-1">
                            <!--begin::Link-->
                            <a href="{{ url_for('base.profile')}}" class="menu-link py-3">Personal Information</a>
                            <!--end::Link-->
                        </div>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <div class="menu-item mb-1">
                            <!--begin::Link-->
                            <a href="#" class="menu-link py-3 active">Change Password</a>
                            <!--end::Link-->
                        </div>
                        <!--end::Item-->
                    </div>
                    <!--end::Nav-->
                </div>
                <!--end::Body-->
            </div>
            <!--end::Profile Card-->
        </div>
        <!--end::Aside-->
        <!--begin::Content-->
        <div class="flex-row-fluid ms-lg-10">
            <form class="form" id="profileForm" method="POST" enctype="multipart/form-data">
                {{ form.csrf_token }}
                <!--begin::Card-->
                <div class="card shadow-sm card-custom card-stretch" id="userCard">
                    <div class="card-header">
                        <div class="card-title">
                            <h3 class="card-label">{{ title }}</h3>
                        </div>
                        <div class="card-toolbar">
                            {{ form.save_btn(class="btn btn-success mr-2") }}
                        </div>
                    </div>
                    <!--end::Header-->

                    <!--begin::Body-->
                    <div class="card-body">
                        {% for field, errors in form.errors.items() %}
                            <div class="alert alert-danger">
                                {{ form[field].label }}: {{ ', '.join(errors) }}
                            </div>
                        {% endfor %}
                        <!--begin::Input group-->
                        <div class="row mb-6">
                            <!--begin::Label-->
                            {{ form.old_password.label(class="col-lg-4 col-form-label required ") }}
                            <!--end::Label-->
                            <div class="col-lg-8">
                                {{ form.old_password(class="form-control form-control-lg form-control-solid mb-3 mb-lg-0") }}
                            </div>
                        </div>
                        <!--end::Input group-->
                        <!--begin::Input group-->
                        <div class="row mb-6">
                            <!--begin::Label-->
                            {{ form.password.label(class="col-lg-4 col-form-label required ") }}
                            <!--end::Label-->
                            <div class="col-lg-8">
                                {{ form.password(class="form-control form-control-lg form-control-solid mb-3 mb-lg-0") }}
                            </div>
                        </div>
                        <!--end::Input group-->
                        <!--begin::Input group-->
                        <div class="row mb-6">
                            <!--begin::Label-->
                            {{ form.password_confirm.label(class="col-lg-4 col-form-label required ") }}
                            <!--end::Label-->
                            <div class="col-lg-8">
                                {{ form.password_confirm(class="form-control form-control-lg form-control-solid mb-3 mb-lg-0") }}
                            </div>
                        </div>
                        <!--end::Input group-->
                    </div>
                    <!--end::Body-->
                </div>
            </form>
        </div>
    </div>
{% endblock %}

{% block additionalscripts %}
    <script>
     var kt_avatar = document.querySelector("#kt_avatar");
     var avatar = new KTImageInput(kt_avatar);

     var form = document.querySelector("#profileForm");
     var blockUI = new KTBlockUI(form, {
         message: '<div class="blockui-message"><span class="spinner-border text-primary"></span> Loading...</div>',
     });

     var validation;

     // Class Definition
     var Profile = function() {
         var _handleProfile = function() {

             validation = FormValidation.formValidation(
                 form,
                 {
                     fields: {
                         first_name: {
                             validators: {
                                 notEmpty: {
                                     message: 'First Name is required'
                                 },
                             }
                         },
                         last_name: {
                             validators: {
                                 notEmpty: {
                                     message: 'Last Name is required'
                                 },
                             }
                         },
                         dob: {
                             validators: {
                                 notEmpty: {
                                     message: 'Date of Birth is required'
                                 },
                             }
                         },
                         gender: {
                             validators: {
                                 notEmpty: {
                                     message: 'Gender is required'
                                 },
                             }
                         },
                         email: {
                             validators: {
                                 notEmpty: {
                                     message: 'Email address is required'
                                 },
                                 emailAddress: {
                                     message: 'The value is not a valid email address'
                                 }
                             },
                             remote: {
                                 message: 'This email address is already taken',
                                 method: 'POST',
                                 url: '{{ url_for("base.check_email") }}',
                                 data: function() {
                                     return {
                                         id: $("#id").val()
                                     }
                                 }
                             }
                         },
                     },
                     plugins: {
                         trigger: new FormValidation.plugins.Trigger({
                             threshold: {
                                 msisdn: 5,
                                 email: 5,
                             },
                         }),
                         sequence: new FormValidation.plugins.Sequence(),
                         trigger: new FormValidation.plugins.Trigger(),
                         submitButton: new FormValidation.plugins.SubmitButton(),
                         bootstrap: new FormValidation.plugins.Bootstrap5(),
                         // defaultSubmit: new FormValidation.plugins.DefaultSubmit(), // Uncomment this line to enable normal button submit after form validation
                     }
                 }
             );



         }

         // Public Functions
         return {
             // public functions
             init: function() {
                 _handleProfile();
             }
         };
     }();

     // Class Initialization
     jQuery(document).ready(function() {
         Profile.init();
     });
    </script>
{% endblock %}

{% set title = "Account Statement" %}
{% extends "layout.djhtml" %}

{% block additionalstyles %}
{% endblock %}
{% block content %}
    <div class="row">
        <div class="col-xl-12">
            <form id="statementForm" method="POST">
                <!--begin::Card-->
                <div class="card shadow-sm card-custom gutter-b card-stretch" id="accountCard">
                    <div class="card-header">
                        <div class="card-title fw-bold">
                            <h3 class="card-label">Account Statement</h3>
                        </div>
                    </div>
                    <div class="card-body">
                        {{ form.csrf_token }}
                        {% with messages = get_flashed_messages(with_categories=True) %}
                            {% if messages %}
                                {% for category, message in messages %}
                                    <div class="alert alert-{{ category }}">
                                        <button class="btn-close" data-close="alert"></button>
                                        {{ message }}
                                    </div>
                                {% endfor %}
                            {% endif %}
                        {% endwith %}
                        <div class="form-group row mb-3">
                            {{ form.is_company.label(class="col-md-3 col-form-label required") }}
                            <div class="col-md-3">
                                {{ form.is_company(class="form-select") }}
                            </div>
                        </div>
                        <div class="form-group row mb-3">
                            {{ form.account_id.label(class="col-md-3 col-form-label required") }}
                            <div class="col-md-3">
                                {{ form.account_id(class="form-select") }}
                            </div>
                        </div>
                        <div class="row fv-row mb-3">
                            {{ form.date_from.label(class="col-md-3 col-form-label required") }}
                            <div class="col-md-3">
                                <div class="input-group">
                                    {{ form.date_from(class="form-control date", readonly="readonly", placeholder="From") }}
                                    <div class="input-group-append">
                                        <span class="input-group-text"><i class="la la-calendar-o fs-2x"></i></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row fv-row mb-3">
                            {{ form.date_to.label(class="col-md-3 col-form-label required") }}
                            <div class="col-md-3">
                                <div class="input-group">
                                    {{ form.date_to(class="form-control date", readonly='readonly', placeholder="To") }}
                                    <div class="input-group-append">
                                        <span class="input-group-text"><i class="la la-calendar-o fs-2x"></i></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row mb-3">
                            {{ form.email.label(class="col-md-3 col-form-label required") }}
                            <div class="col-md-3">
                                {{ form.email(class="form-control") }}
                            </div>
                        </div>
                    </div>
                    <div class="card-footer text-right">
                        {{ form.btn_submit(class="btn btn-sm btn-primary") }}
                    </div>
                </div>
                <!--end::Card-->
            </form>
        </div>
    </div>
{% endblock %}

{% block additionalscripts %}
    <script src="{{ url_for('static', filename='plugins/jquery-chained/jquery.chained.min.js') }}" type="text/javascript"></script>
    <script>
     "use strict";
     var target = document.querySelector("#statementForm");
     var blockUI;

     blockUI = KTBlockUI.getInstance(target);

     if (!blockUI) {
         blockUI = new KTBlockUI(target);
     }

     var _handleStatementActions = function() {
         var validation = FormValidation.formValidation(
             document.querySelector('#statementForm'),
             {
                 fields: {
                     date_from: {
                         validators: {
                             notEmpty: {
                                 message: 'Date From is required'
                             },
                         }
                     },
                     date_to: {
                         validators: {
                             notEmpty: {
                                 message: 'Date To is required'
                             },
                         }
                     },
                     account_id: {
                         validators: {
                             notEmpty: {
                                 message: 'Please select an account'
                             },
                         }
                     },
                     email: {
                         validators: {
                             notEmpty: {
                                 message: 'Please enter an email'
                             },
                         }
                     },
                 },
                 plugins: {
                     trigger: new FormValidation.plugins.Trigger(),
                     submitButton: new FormValidation.plugins.SubmitButton(),
                     // defaultSubmit: new FormValidation.plugins.DefaultSubmit(),
                     bootstrap: new FormValidation.plugins.Bootstrap5()
                 }
             }
         ).on('core.form.valid', function () {
             blockUI.block();

             var data = $("#statementForm").serialize();

             $.post("{{ url_for('.statement') }}", data, function(r, s) {
                 blockUI.release();
                 if (r.success) {
                     swal.fire({
                         text: "Report will be sent to the specified email address",
                         icon: "success",
                         buttonsStyling: false,
                         confirmButtonText: "Ok",
                         customClass: {
                             confirmButton: "btn btn-sm font-weight-bold btn-light-primary"
                         }
                     });
                     validation.resetForm(true);
                 } else {
                     swal.fire({
                         text: r.message,
                         icon: "error",
                         buttonsStyling: false,
                         confirmButtonText: "Ok",
                         customClass: {
                             confirmButton: "btn btn-sm font-weight-bold btn-light-primary"
                         }
                     });
                 }
             });
         });
     }

     // Class Definition
     var Statement = function() {
         // Public Functions
         return {
             // public functions
             init: function() {
                 _handleStatementActions();
             }
         };
     }();



     $(document).ready(function(){
         $("#account_id").chained("#is_company");

         $('.date').daterangepicker({
             singleDatePicker: true,
             showDropdowns: true,
             minYear: 2019,
             maxYear: parseInt(moment().format("YYYY")),
             autoApply: true,
             autoUpdateInput: true,
             locale: {
                 format: 'YYYY-MM-DD'
             }
         });

         Statement.init();
     });
    </script>
{% endblock %}
